[
  {
    "path": "posts/Huiyong_Assignment/",
    "title": "Analysis of crimes in London - EDA using Spatial clustering, hotspot clustering and trend analysis",
    "description": "The analysis is part of the bigger Shiny-based Visual Analytics Application (Shiny-VAA) project for the course ISSS608- Visual Analytics offered in SMU MITB. This analysis will focus in details on 2 components of the project, namely Exploratory Data Analysis (EDA) and spatial clustering.",
    "author": [
      {
        "name": "Tan Huiyong",
        "url": "https://sg.linkedin.com/in/tan-huiyong-72a1224b"
      }
    ],
    "date": "2021-04-11",
    "categories": [],
    "contents": "\r\n\r\nimg {\r\n    max-width: none;\r\n\r\n    /* other options:\r\n    max-width: 1200px;\r\n    */\r\n}\r\nObjective\r\nThere is a growing emphasis on crime analysis by law enforcement agencies over the past decades. Crime analysis is defined as the systematic study of crime and disorder problems as well as other police-related issues—including socio-demographic, spatial, and temporal factors—to assist the police in criminal apprehension, crime and disorder reduction, crime prevention, and evaluation (Santos, 2016).\r\nA literature review will be conducted to understand the how analysis of crime data was done before. Thereafter,This article will analyse historical crimes in Greater London, UK, particularly using the hot-spots and spatial clustering methods to give insights on the crime in the metropolitan.\r\nThe analysis will be presented in the form of visualization and they will be part of the Shiny-App dashboard in the future.\r\n1. Storyboard\r\nThe storyboard will depict the EDA module of the ShinyApp and it would consists of filter panel, geo-spatial visualization and time series of crimes.\r\nStoryboardIt is important to show visualize the EDA in geo-spatial format as the data touches on crimes within a city and it would be difficult to view the difference in crimes across the city if a crosstab was used to display it.\r\nThe time series line plot would allow one to observe any trends over time.\r\nA filter panel is essential to maximise interactivity. However, this will be explored during the coding of the ShinyApp.\r\n2. Literature review\r\nThere are different methods in displaying geo-spatial data. Based on studies by Tennekes, M., tmap R package provides a wide range of plotting methods for users. If the exact locations of each crime is known, they could be plotted as a dot map.\r\nDot map of crimes in Greater London, (Tennekes, M., 2018)Tennekes had demonstrated that the smooth_map function with the package could visualize crime density by area in a smoothed density contoured lines and spatial polygons that represent areas with uniform density value,\r\nKernel density map of crimes in Greater London, (Tennekes, M., 2018)While the Kernel density map for the crime is able to show area with high density of crimes per area, it does not partake any spatial autocorrection analysis to visualize spatial pattern or hotspot detection. Chaikaew, Tripathi & Souris had written an article on “Exploring spatial patterns and hotspots of diarrhea in Chiang Mai, Thailand” and they had applied an drew up an flowchart to depict how they devise their analysis.\r\nFlowchart of analysing spatial patterns and hotspots, (Chaikaew, Tripathi & Souris., 2009)They have utilized local Moran statistics and locations by type of association (LISA cluster map) to indicate spatial clusters. On the other hand, they had calculated local spatial correlation indices to display the hotspots. Nonetheless, a multiplicative measure of overall spatial association of values which fall within a given distance of each other, such as Getis and Ord’s G-Statistics could be explored to depict distance based clustering.\r\nMoran scatter plot matrix and LISA cluster map of DMBR for p < 0.01, (Chaikaew, Tripathi & Souris., 2009)Literature Source\r\nNakarin Chaikaew, Nitin K Tripathi & Marc Souris, Exploring spatial patterns and hotspots of diarrhea in Chiang Mai, Thailand, International Journal of Health Geographics, 24 June 2009\r\nTennekes, M., tmap: Thematic Maps in R, for Journal of Statistical Software, April 2018, Volume 84, Issue 6.\r\n3. Step-by-step Data Preparation\r\n3.1 Installing and launching relevant R packages\r\n3.2 Datasource\r\nThe datasets used in this analysis are taken from London Datastore, which is a data repository created by Greater London Authority (GLA). The datasets for the analysis are as follows:\r\nRecorded Crime: Geographic Breakdown\r\nHistoric crimes from Mar 2010 till Dec 2018\r\nRecent 24 months crimes\r\nStatistical GIS Boundary Files for London\r\nWards level - Ward is the primary unit of English electoral geography\r\nBorough level - Boroughs are local authority districts that make up the ceremonial county of Greater London, with each Borough divided into different wards.\r\nPopulation and housing density of Greater London at Borough level\r\n3.3 Importing of crime dataset into R\r\nThe dataset are in CSV format, hence read_csv() function of readr package was used to import the data for both past 24 months and historical ones.\r\n\r\n\r\ncrime_his = read_csv('data/MPS_Ward_Level_Crime_Historic_NewWard.csv')\r\n\r\n\r\nParsed with column specification:\r\ncols(\r\n  .default = col_double(),\r\n  WardCode = col_character(),\r\n  `Ward Name` = col_character(),\r\n  Borough = col_character(),\r\n  `Major Category` = col_character(),\r\n  `Minor Category` = col_character()\r\n)\r\nSee spec(...) for full column specifications.\r\n\r\ncrime_24mths = read_csv('data/MPS Ward Level Crime (most recent 24 months).csv')\r\n\r\n\r\nParsed with column specification:\r\ncols(\r\n  .default = col_double(),\r\n  MajorText = col_character(),\r\n  MinorText = col_character(),\r\n  WardName = col_character(),\r\n  WardCode = col_character(),\r\n  LookUp_BoroughName = col_character()\r\n)\r\nSee spec(...) for full column specifications.\r\n\r\n3.4 Understanding the crime data\r\nThe structure of the data was examined.\r\n3.5 Unpivoting crime dataset\r\nIt was observed that the data sets were presented in pivoted format whereby the month year of when the crime had took place are presented as individual columns. pivot_longer() function of tidyverse was used to “unpivot” the data. A new column “Month_Year” is created to account for the month of the crimes and this column is converted into date using as.Date() function. Other columns are renamed for easier reference and to be consistent between the 2 datasets.\r\n\r\n\r\ncrime_his_tab = crime_his %>%\r\n  pivot_longer(!c(`Major Category`,\r\n                  `Minor Category`,\r\n                  `Ward Name`,\r\n                  WardCode,\r\n                  Borough),\r\n                  names_to = 'Month_Year', values_to = 'Count') %>%\r\n          rename(`WardName` = `Ward Name`, \r\n         `Crime_Sub_Category` = `Minor Category`,\r\n         `Crime_Category` = `Major Category`,\r\n         `BoroughName` = `Borough`) %>%\r\n  mutate(Month_Year=as.Date(paste0(Month_Year,'01'), format=\"%Y%m%d\"))\r\n\r\ncrime_24mths_tab = crime_24mths %>%\r\n  pivot_longer(!c(MajorText,\r\n                  MinorText,\r\n                  WardName,\r\n                  WardCode,\r\n                  LookUp_BoroughName),\r\n                  names_to = 'Month_Year', values_to = 'Count') %>%\r\n          rename(`Crime_Sub_Category` = `MinorText`,\r\n         `Crime_Category` = `MajorText`,\r\n         `BoroughName` = `LookUp_BoroughName`) %>%\r\n  mutate(Month_Year=as.Date(paste0(Month_Year,'01'), format=\"%Y%m%d\"))\r\n\r\nglimpse(crime_his_tab)\r\n\r\n\r\nObservations: 2,113,230\r\nVariables: 7\r\n$ WardCode           <chr> \"E05000026\", \"E05000026\", \"E05000026\",...\r\n$ WardName           <chr> \"Abbey\", \"Abbey\", \"Abbey\", \"Abbey\", \"A...\r\n$ BoroughName        <chr> \"Barking and Dagenham\", \"Barking and D...\r\n$ Crime_Category     <chr> \"Burglary\", \"Burglary\", \"Burglary\", \"B...\r\n$ Crime_Sub_Category <chr> \"Burglary In A Dwelling\", \"Burglary In...\r\n$ Month_Year         <date> 2010-04-01, 2010-05-01, 2010-06-01, 2...\r\n$ Count              <dbl> 9, 4, 6, 6, 12, 5, 3, 11, 8, 8, 7, 4, ...\r\n\r\nglimpse(crime_24mths_tab)\r\n\r\n\r\nObservations: 537,840\r\nVariables: 7\r\n$ Crime_Category     <chr> \"Arson and Criminal Damage\", \"Arson an...\r\n$ Crime_Sub_Category <chr> \"Arson\", \"Arson\", \"Arson\", \"Arson\", \"A...\r\n$ WardName           <chr> \"Abbey\", \"Abbey\", \"Abbey\", \"Abbey\", \"A...\r\n$ WardCode           <chr> \"E05000026\", \"E05000026\", \"E05000026\",...\r\n$ BoroughName        <chr> \"Barking and Dagenham\", \"Barking and D...\r\n$ Month_Year         <date> 2019-01-01, 2019-02-01, 2019-03-01, 2...\r\n$ Count              <dbl> 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 0,...\r\n\r\n3.6 Comparison of datasets\r\nThe unique values of Borough and Ward-Code are studied between the historical and past 24 months crime datasets.It was observed that the names of borough was identical, but not for Ward level, there are 90 wards with different ward codes.\r\n\r\n\r\nsort(unique(crime_his_tab$BoroughName)) == sort(unique(crime_24mths_tab$BoroughName))\r\n\r\n\r\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\r\n[14] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\r\n[27] TRUE TRUE TRUE TRUE TRUE TRUE\r\n\r\ncompare = tibble(binary = sort(unique(crime_24mths_tab$WardCode)) \r\n                 %in%  sort(unique(crime_his_tab$WardCode)))\r\n\r\nnrow(filter(compare,binary ==FALSE))\r\n\r\n\r\n[1] 90\r\n\r\nFurther comparison was made between the historical and past 24 months crime datasets on the crime categories and it revealed that the crime categorization are and this may complicate study if the 2 datasets were to be appended together.\r\n\r\n\r\ncompare_crime = list(Hist = sort(unique(crime_his_tab$Crime_Category)),\r\n     Mths24 = sort(unique(crime_24mths_tab$Crime_Category)))\r\n\r\npaged_table(data.frame(lapply(compare_crime, \"length<-\", max(lengths(compare_crime)))))\r\n\r\n\r\n\r\n\r\n{\"columns\":[{\"label\":[\"Hist\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Mths24\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Burglary\",\"2\":\"Arson and Criminal Damage\"},{\"1\":\"Criminal Damage\",\"2\":\"Burglary\"},{\"1\":\"Drugs\",\"2\":\"Drug Offences\"},{\"1\":\"Fraud or Forgery\",\"2\":\"Miscellaneous Crimes Against Society\"},{\"1\":\"Other Notifiable Offences\",\"2\":\"Possession of Weapons\"},{\"1\":\"Robbery\",\"2\":\"Public Order Offences\"},{\"1\":\"Sexual Offences\",\"2\":\"Robbery\"},{\"1\":\"Theft and Handling\",\"2\":\"Sexual Offences\"},{\"1\":\"Violence Against The Person\",\"2\":\"Theft\"},{\"1\":\"NA\",\"2\":\"Vehicle Offences\"},{\"1\":\"NA\",\"2\":\"Violence Against the Person\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\r\n  \r\n\r\nIt was decided that only historical crime dataset will be used due to the incompatibility and the past 24 months data includes a blackswan event (Covid-19) in year 2020.\r\n3.7 Further analysis of data\r\nThe crime dataset was furthered studied using the summary() function and it verified that the earliest month-year was Apr 2010.\r\n\r\n\r\nsummary(crime_his_tab)\r\n\r\n\r\n   WardCode           WardName         BoroughName       \r\n Length:2113230     Length:2113230     Length:2113230    \r\n Class :character   Class :character   Class :character  \r\n Mode  :character   Mode  :character   Mode  :character  \r\n                                                         \r\n                                                         \r\n                                                         \r\n Crime_Category     Crime_Sub_Category   Month_Year        \r\n Length:2113230     Length:2113230     Min.   :2010-04-01  \r\n Class :character   Class :character   1st Qu.:2012-06-01  \r\n Mode  :character   Mode  :character   Median :2014-08-01  \r\n                                       Mean   :2014-08-01  \r\n                                       3rd Qu.:2016-10-01  \r\n                                       Max.   :2018-12-01  \r\n     Count        \r\n Min.   :  0.000  \r\n 1st Qu.:  0.000  \r\n Median :  1.000  \r\n Mean   :  3.099  \r\n 3rd Qu.:  4.000  \r\n Max.   :851.000  \r\n\r\n3.8 Transforming of data\r\nAn additional field “Year” was created to show the year of the crime and the data is filtered using filter() from dplyr package to take in only data from 2011 onward as the data from 2010 does not contain the full year data.\r\n\r\n\r\ncrime_his_tab = crime_his_tab %>%\r\n  mutate(Year = year(Month_Year)) %>%\r\n  filter(Year >= 2011)\r\n\r\n\r\n\r\nThe data is further summarized by year and ward level\r\n\r\n\r\ncrime_his_tab_ward = crime_his_tab %>%\r\n      group_by(WardName,WardCode, Year) %>%\r\n      summarize(Total_count = sum(Count)) %>%\r\n      pivot_wider(names_from = Year,\r\n                  values_from = Total_count)\r\n\r\n\r\n`summarise()` has grouped output by 'WardName', 'WardCode'. You can override using the `.groups` argument.\r\n\r\n4 Step-by-step Visualization and Analysis Preparation\r\n4.1 Reading of map\r\nreadOGR() function of rgdal package was used to read OGR vector maps into Spatial objects. st_read() is not used as we require the file to be read as sp for further analysis\r\nCity of London is not present in the crime dataset, hence it will be removed from the geospatial data using subset() function to ensure consistency during subsequent analysis.\r\nA total of 630 wards was read. A quick thematic map (QTM) using qtm() function from tmap package is plotted to verify the removal of City of London, which is shown as a blank space in the middle of Greater London.\r\n\r\n\r\nqtm(london)\r\n\r\n\r\n\r\n\r\n4.2 Joining of geospatial and crime data\r\nThe geospatial and the crime data (aspatial) will be combined into 1 data using the left_join() function of dplyr package.The geospatial data will be used as the based data object, while the crime data will be used as the join table. The join fields are “GSS_CODE” and “WardCode” from the respective data. Ward names are not used as they are not unique and could be the same in multiple boroughs. Hence, a new field, Ward-Borough, is created to allow easier differentiation of common ward names.\r\nTo simplify the study, all spatial analysis would only study crimes tht occurred in year 2018.\r\n\r\n\r\nlondon@data <- left_join(london@data,crime_his_tab_ward,\r\n                                  by = c(\"GSS_CODE\" = \"WardCode\")) %>%\r\n              mutate(Ward_Borough = paste(NAME,\"-\", BOROUGH))\r\n\r\nqtm(london, \"2018\")\r\n\r\n\r\n\r\n\r\n4.3 Exploring the style of presentation\r\nA quick exploration of the maps in different thematic styles were explored using tm_shape() function from tmap.\r\n\r\n\r\ntmap_mode(\"plot\")\r\n\r\n\r\ntmap mode set to plotting\r\n\r\nmap1 = tm_shape(london) + \r\n  tm_fill(\"2018\", style=\"equal\") +\r\n  tm_borders(alpha = 0.2) +\r\n  tm_layout(main.title = \"Equal\", main.title.size = 0.7 ,\r\n            legend.position = c(\"right\", \"bottom\"), legend.title.size = 0.8)\r\n\r\nmap2 = tm_shape(london) + \r\n  tm_fill(\"2018\",  style=\"jenks\") +\r\n  tm_borders(alpha = 0.2) +\r\n  tm_layout(main.title = \"Jenks\", main.title.size = 0.7 ,\r\n            legend.position = c(\"right\", \"bottom\"), legend.title.size = 0.8)\r\n\r\nmap3 = tm_shape(london) + \r\n  tm_fill(\"2018\", style=\"quantile\") +\r\n  tm_borders(alpha = 0.2) +\r\n  tm_layout(main.title = \"Quantile\", main.title.size = 0.7 ,\r\n            legend.position = c(\"right\", \"bottom\"), legend.title.size = 0.8)\r\n\r\nmap4 = tm_shape(london) + \r\n  tm_fill(\"2018\", style=\"fisher\") +\r\n  tm_borders(alpha = 0.2) +\r\n  tm_layout(main.title = \"Fisher\", main.title.size = 0.7 ,\r\n            legend.position = c(\"right\", \"bottom\"), legend.title.size = 0.8)\r\n\r\ntmap_arrange(map1,map2,map3,map4,outer.margins = 0, ncol = 2)\r\n\r\n\r\n\r\n\r\nAs pointed out in the literature review, tmap offers a wide range of configuration to visualize the geospatial data in different color schema. However, it is important to display the contrast of the colours with analytical values.\r\n4.4 Exploration of Local Indicators for Spatial Association (LISA)\r\n4.4.1 Creating list of neighbours\r\nThe list of neighbours of each Ward level polygons are identified using the poly2nb() function from spdep package. This package procides a collection of functions to create spatial weights matrix, building neighbour lists and tests for spatial ‘autocorrelation’,including global ‘Morans I’ and ‘Gearys C’\r\nA Queen contiguity matrix is first constructed. Queen would consider 2 polygons neighbours as long as a single shared boundary point meets the contiguity condition.\r\n\r\n\r\nwm_q <- poly2nb(london, queen=TRUE)\r\n\r\nsummary(wm_q)\r\n\r\n\r\nNeighbour list object:\r\nNumber of regions: 629 \r\nNumber of nonzero links: 3686 \r\nPercentage nonzero weights: 0.9316527 \r\nAverage number of links: 5.860095 \r\nLink number distribution:\r\n\r\n  1   2   3   4   5   6   7   8   9  10  11  12 \r\n  1   4  14  73 171 177 117  52  13   4   2   1 \r\n1 least connected region:\r\n0 with 1 link\r\n1 most connected region:\r\n134 with 12 links\r\n\r\nplot() function is used to visualize the resultant mapping of neighbours from using the Queen continuity matrix\r\n\r\n\r\nplot(london, border=\"grey\")\r\nplot(wm_q, coordinates(london), pch = 19, cex = 0.4, add = TRUE, col= \"#FB7080\")\r\n\r\n\r\n\r\n\r\n4.4.2 Row standardized weighted matrix\r\nRow standardized weighted matrix is the process of normalizing each row of the matrix and assigned weightage to address polygons that have unequal number of neighbours.\r\n\r\n\r\nrswm_q <- nb2listw(wm_q, zero.policy = TRUE)\r\nsummary(rswm_q)\r\n\r\n\r\nCharacteristics of weights list object:\r\nNeighbour list object:\r\nNumber of regions: 629 \r\nNumber of nonzero links: 3686 \r\nPercentage nonzero weights: 0.9316527 \r\nAverage number of links: 5.860095 \r\nLink number distribution:\r\n\r\n  1   2   3   4   5   6   7   8   9  10  11  12 \r\n  1   4  14  73 171 177 117  52  13   4   2   1 \r\n1 least connected region:\r\n0 with 1 link\r\n1 most connected region:\r\n134 with 12 links\r\n\r\nWeights style: W \r\nWeights constants summary:\r\n    n     nn  S0       S1       S2\r\nW 629 395641 629 222.8078 2562.136\r\n\r\n4.4.3 local Moran’s I statistics\r\nlocalmoran() function from spdep package calculates the local spatial statistic Moran’s I for each zone based on the spatial weights.\r\nIi: the local Moran’s I statistics E.Ii: the expectation of local Moran statistic Var.Ii: the variance of local Moran statistic Z.Ii:the standard deviate of local Moran statistic Pr(): the p-value of local Moran statistic\r\nThe Moran’s I was calculated and a few samples of the result is shown.\r\n\r\n\r\nfips <- order(london$Ward_Borough)\r\nlocalMI <- localmoran(london$`2018`, rswm_q)\r\n\r\n\r\n\r\nMapping local Moran’s I and p values values\r\n\r\n\r\nlondon.localMI <- cbind(london,localMI)\r\nlocalMI.map <- tm_shape(london.localMI) +\r\n  tm_fill(col = \"Ii\", \r\n          palette = \"YlOrRd\", \r\n          title = \"local moran statistics\") +\r\n  tm_borders(alpha = 0.5)\r\n\r\npvalue.map <- tm_shape(london.localMI) +\r\n  tm_fill(col = \"Pr.z...0.\", \r\n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\r\n          palette=\"-Blues\", \r\n          title = \"local Moran's I p-values\") +\r\n  tm_borders(alpha = 0.5)\r\n\r\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\r\n\r\n\r\n\r\n\r\n4.4.4 Moran scatterplot with standardised variable\r\nThe Moran’s I scatterplot is plotted using standardized scale.\r\n\r\n\r\nlondon$Z.2018 <- scale(london$`2018`) %>% as.vector \r\nnci <- moran.plot(london$Z.2018, rswm_q, labels=as.character(london$Ward_Borough),\r\n                  xlab=\"z-crime 2018\", ylab=\"Spatially Lag z-crime 2018\")\r\n\r\n\r\n\r\n\r\n4.4.5 LISA Cluster map\r\nThe LISA cluster map would then created. 4 quadrants would be created based on the mean values of the crimes and the significance level is set at 5%.\r\n\r\n\r\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\r\nC_Mean <- london$'2018' - mean(london$`2018`)\r\nC_mI <- localMI[,1] - mean(localMI[,1]) \r\nsignif <- 0.05    # 5% significance level\r\n\r\nquadrant[C_Mean <0 & C_mI<0] <- 1      \r\nquadrant[C_Mean <0 & C_mI>0] <- 2\r\nquadrant[C_Mean >0 & C_mI<0] <- 3\r\nquadrant[C_Mean >0 & C_mI>0] <- 4    \r\n\r\nquadrant[localMI[,5]>signif] <- 0\r\n\r\n\r\n\r\n\r\n\r\nlondon.localMI$quadrant <- quadrant\r\ncolors <- c(\"#ffffff\", \"cornflowerblue\", \"cyan1\", \"chocolate1\", \"firebrick\")\r\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\r\n\r\ntm_shape(london.localMI) +\r\n  tm_fill(col = \"quadrant\", style = \"cat\", \r\n          palette = colors[c(sort(unique(quadrant)))+1], \r\n          labels = clusters[c(sort(unique(quadrant)))+1], \r\n          popup.vars = c(\"Postal.Code\")) +\r\n  tm_view(set.zoom.limits = c(11,17)) +\r\n  tm_borders(alpha=0.5)\r\n\r\n\r\n\r\n\r\n4.5 Hot Spot and Cold Spot Area Analysis\r\n4.5.1 Findng neighbours\r\nStatistically significant hot-spots and cold-spots could be mapped by looking at neighbours within a defined proximity. This analysis is performed using High/Low Clustering (Getis-Ord General G).\r\ndnearneigh() function from spdep is used to identify neighbours of region points by Euclidean distance between lower and upper bounds. The specific distance was used to ensure all objects have at least 1 link. As the data is not in kilometres scale, longlat is turned off.\r\n\r\n\r\ndnb <- dnearneigh(coordinates(london), 0,2940, longlat = NULL)\r\ndnb\r\n\r\n\r\nNeighbour list object:\r\nNumber of regions: 629 \r\nNumber of nonzero links: 8624 \r\nPercentage nonzero weights: 2.179754 \r\nAverage number of links: 13.71065 \r\n\r\nThe resultant neighbour plot is as shown below.\r\n\r\n\r\nplot(london, border = 'lightgrey')\r\nplot(dnb, coordinates(london), pch = 19, cex = 0.4, add = TRUE, col= \"#FB7080\")\r\n\r\n\r\n\r\n\r\nA listw type spatial weights object is created using nb2listw() function from spdep and a basic binary distance weights is applied.\r\n\r\n\r\ndnb_lw <- nb2listw(dnb, style = 'B')\r\nsummary(dnb_lw)\r\n\r\n\r\nCharacteristics of weights list object:\r\nNeighbour list object:\r\nNumber of regions: 629 \r\nNumber of nonzero links: 8624 \r\nPercentage nonzero weights: 2.179754 \r\nAverage number of links: 13.71065 \r\nLink number distribution:\r\n\r\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \r\n 9 11 13 21 16 26 31 37 38 54 48 33 22 25 22 24 13 22 16 19 20 16 15 \r\n24 25 26 27 28 29 30 31 32 33 34 \r\n 8 13  9 13 10  7  8  3  3  3  1 \r\n9 least connected regions:\r\n1 41 44 45 106 107 124 125 356 with 1 link\r\n1 most connected region:\r\n477 with 34 links\r\n\r\nWeights style: B \r\nWeights constants summary:\r\n    n     nn   S0    S1     S2\r\nB 629 395641 8624 17248 611352\r\n\r\nAdaptive distance method can also be used to derived the proximity matrix\r\n\r\n\r\ncoords <- coordinates(london)\r\nknb <- knn2nb(knearneigh(coords, k=5, longlat = NULL), \r\n              row.names=row.names(london$`2018`))\r\nknb_lw <- nb2listw(knb, style = 'B')\r\nsummary(knb_lw)\r\n\r\n\r\nCharacteristics of weights list object:\r\nNeighbour list object:\r\nNumber of regions: 629 \r\nNumber of nonzero links: 3145 \r\nPercentage nonzero weights: 0.7949126 \r\nAverage number of links: 5 \r\nNon-symmetric neighbours list\r\nLink number distribution:\r\n\r\n  5 \r\n629 \r\n629 least connected regions:\r\nwith 5 links\r\n629 most connected regions:\r\nwith 5 links\r\n\r\nWeights style: B \r\nWeights constants summary:\r\n    n     nn   S0   S1    S2\r\nB 629 395641 3145 5773 63952\r\n\r\nThe resultant plot is as follows.\r\n\r\n\r\nplot(london, border=\"lightgrey\")\r\nplot(knb, coordinates(london), pch = 19, cex = 0.4, add = TRUE, col= \"#FB7080\")\r\n\r\n\r\n\r\n\r\n4.5.2 Mapping Gi values with fixed distance and adaptive distance weights\r\nGi values,represented as a Z-score, is calculated using both fixed and adaptive distance matrix methods. Both methods are used to compare the difference in the result. localG() function from spdep is used used to calculate the Gi values.\r\nFixed distance weight\r\n\r\n\r\nfips <- order(london$Ward_Borough)\r\ngi.fixed <- localG(london$`2018`, dnb_lw)\r\n\r\nlondon.gi_f <- cbind(london, as.matrix(gi.fixed))\r\nnames(london.gi_f)[19] <- \"gstat\"\r\n\r\n\r\n\r\nAdaptive distance weight\r\nThe difference between the 2 different distance weight can be shown clearly when the map object is plotted.\r\n\r\n\r\ngi_map_a = tm_shape(london.gi_a) +\r\n          tm_fill(col = \"gstat_adaptive\",\r\n          style = \"pretty\",\r\n          palette = \"-RdBu\",\r\n          title = \"local Gi\") +\r\n          tm_borders(alpha = 0.5)+\r\n          tm_layout(main.title = \"gi adaptive distance weights\", main.title.size = 1)\r\n\r\ngi_map_f =tm_shape(london.gi_f) +\r\n          tm_fill(col = \"gstat\", \r\n          style = \"pretty\",\r\n          palette=\"-RdBu\",\r\n          title = \"local Gi\") +\r\n          tm_borders(alpha = 0.5)+\r\n          tm_layout(main.title = \"gi fixed distance weights\", main.title.size = 1 )\r\n\r\ntmap_arrange(gi_map_a, gi_map_f, asp=1, ncol=2)\r\n\r\n\r\n\r\n\r\n5 Applying on Borough level\r\nThe analysis had focused on Ward level, now similar approach is applied for Borough level data for comparison. There is available information on population at borough level and Since crime rate is often used in the form of crime per 100,000 population, the borough level data would present in terms of crime rate and there would remove any misrepresentation of data due to population factor (i.e. larger population is likely to have higher crime). Hence, differences between Ward and Borough visualization is expected.\r\nThe dataset is different and for simplicity, the data would focus on year 2018 data for this analysis.\r\nqtm() is used to give a quick view of crime rate at borough level and total crimes at Ward level for year 2018.\r\n\r\n\r\nlondon_b <- readOGR(dsn = \"Data/London-wards-2018_ESRI\", \r\n                layer = \"London_Borough_Excluding_MHW\") %>%\r\n              subset(NAME !=\"City of London\")\r\n\r\ncrime_his_b = read_csv('data/MPS_Borough_Level_Crime_Historic.csv')\r\npop = read_csv('data/housing-density-borough.csv')\r\n\r\n\r\n\r\n\r\n\r\ncrime_his_tab_b = crime_his_b %>%\r\n  pivot_longer(!c(`Borough`,\r\n                  `Major Category`,\r\n                  `Minor Category`),\r\n                  names_to = 'Month_Year', values_to = 'Count') %>%\r\n  rename(`Crime_Sub_Category` = `Minor Category`,\r\n         `Crime_Category` = `Major Category`,\r\n         `BoroughName` = `Borough`) %>%\r\n  mutate(Month_Year=as.Date(paste0(Month_Year,'01'), format=\"%Y%m%d\")) %>%\r\n  mutate(Year = year(Month_Year)) %>%\r\n  filter(Year == 2018) %>%\r\n    group_by(BoroughName, Year) %>%\r\n    summarize(Total_count = sum(Count)) \r\n\r\ncrime_his_tab_b =  left_join(crime_his_tab_b,pop, by = c(\"BoroughName\" = \"Name\",\"Year\" = \"Year\")) %>%\r\n                   mutate(Crime_rate = (Total_count / Population*100000))\r\n\r\nlondon_b@data <- left_join(london_b@data,crime_his_tab_b,\r\n                                  by = c(\"NAME\" = \"BoroughName\")) \r\n\r\ntmap_mode(\"plot\")\r\ntmap_arrange(qtm(london, \"2018\", fill.title = \"Crimes at Ward level, 2018\")\r\n             , qtm(london_b, \"Crime_rate\", fill.title = \"Crime rate at Borough level, 2018\") ,\r\n             asp=1, ncol=2)\r\n\r\n\r\n\r\n\r\nIt is observed that the polygons of the Borough across River Thames are not connected and this may post implications as we calculate the neighours.\r\nAs expected the Borough are not able to find the nearest neighbours due to the separation at the river.\r\n\r\n\r\n\r\nSnap can be adjusted to address this issue on a best effort basis.\r\n\r\n\r\nwm_q_b <- poly2nb(london_b, snap = 500, row.names = london_b$NAME, queen=TRUE)\r\nsummary(wm_q_b)\r\n\r\n\r\nNeighbour list object:\r\nNumber of regions: 32 \r\nNumber of nonzero links: 152 \r\nPercentage nonzero weights: 14.84375 \r\nAverage number of links: 4.75 \r\nLink number distribution:\r\n\r\n2 3 4 5 6 7 \r\n2 3 9 7 9 2 \r\n2 least connected regions:\r\nHavering Bexley with 2 links\r\n2 most connected regions:\r\nBrent Wandsworth with 7 links\r\n\r\n\r\n\r\n\r\nThe corresponding mapping local Moran’s I values are as shown below\r\n\r\n\r\n\r\nPlotting Moran scatterplot\r\n\r\n\r\n\r\nPreparation of LISA cluster map\r\n\r\n\r\n\r\n\r\ntmap mode set to plotting\r\n\r\n\r\nHot Spot and Cold Spot Area Analysis\r\n\r\n\r\n\r\n\r\n\r\n\r\n6. Plotting of time series with seasonal decomposition\r\nA The seasonality of the crime data could be analysed using ggsdc() function of ggseas package. This function is able to display the data into different composition for easier understanding.\r\n\r\n\r\n\r\n\r\n\r\ntime_viz = ggsdc(crime_his_tab_b_time, aes(x = x, y = Total_count)\r\n          , method = \"seas\", start = c(2011, 1), frequency = 12,\r\n          facet.titles = c(\"The original series\", \r\n                       \"The underlying trend\", \r\n                       \"Regular seasonal patterns\", \r\n                       \"All the randomness left\")) +\r\n          geom_line() +\r\n          labs(x = 'Date', y = \"Crimes In London\") \r\n\r\ntime_viz\r\n\r\n\r\n\r\n\r\n7. Finalized visualization\r\n\r\n\r\n\r\n8. Conclusion & insights\r\nData exploration and cleaning is essential prior to the visualization.\r\nThe visualization reveals that the certain area within London tends to have higher crime rate and there is a seasonal trend in crimes. Local Moran’s I is able to identify clusters and outliers, while Gi statistics are able to detect the cold and hot spots of crimes.It is important to include underlying analysis method such that the color contrast shown on the visualized map is meaningful.\r\nWestminster, a Borough in central London is observed to have comparatively high crime rate compared to the rest of hte metropolitan. Further analysis could be done in the future to understand what factors could have contribute to its high crime rate.\r\n9. Reference\r\nIS415 Hands-on Exercise 7: Spatial Clustering of Geographically Referenced Attribute, Kam Tin Seong, 2019, https://www.rpubs.com/tskam/IS415-Hands-on_Ex07\r\nGlobal and local spatial autocorrelation, Juanjo Medina and Reka Solymosi, 2019, https://maczokni.github.io/crimemapping_textbook_bookdown/global-and-local-spatial-autocorrelation.html\r\nggseas V0.5.4 R package, Peter Ellis, https://cran.r-project.org/web/packages/ggseas/ggseas.pdf\r\ntmap: Thematic Maps in R, Martijn Tennekes, 2018, https://ij-healthgeographics.biomedcentral.com/articles/10.1186/1476-072X-8-36, https://www.jstatsoft.org/article/view/v084i06/v84i06.pdf\r\nNakarin Chaikaew, Nitin K Tripathi & Marc Souris, Exploring spatial patterns and hotspots of diarrhea in Chiang Mai, Thailand, International Journal of Health Geographics, 24 June 2009, https://ij-healthgeographics.biomedcentral.com/articles/10.1186/1476-072X-8-36\r\n\r\n\r\n\r\n",
    "preview": "posts/Huiyong_Assignment/Huiyong_assignment_files/figure-html5/unnamed-chunk-11-1.png",
    "last_modified": "2021-04-11T23:57:29+08:00",
    "input_file": "Huiyong_assignment.utf8.md"
  },
  {
    "path": "posts/2021-02-27-proposal/",
    "title": "Proposal",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-27",
    "categories": [],
    "contents": "\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-28T09:52:22+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to ISSS608 Project Weblog",
    "description": "Welcome to our new blog, ISSS608 Project Weblog. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-27",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-28T09:52:24+08:00",
    "input_file": {}
  }
]
